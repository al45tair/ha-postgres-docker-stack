version: '3.1'
services:

  haproxy:
    image: haproxy:alpine
    ports:
        - "5000:5000"
        - "5001:5001"
        - "8008:8008"
    secrets: 
      - haproxy_cfg
    networks:
      - dbs
    command:
      - haproxy
      - -f 
      - /run/secrets/haproxy_cfg
  
  etcdnode1:
    image: quay.io/coreos/etcd:v3.1.2
    networks: 
      - dbs
    entrypoint: etcd
    command:
      - -name
      - etcdnode1
      - --data-dir
      - /etcd_data
      - -advertise-client-urls
      - http://etcdnode1:2379
      - -listen-client-urls
      - http://0.0.0.0:2379
      - -initial-advertise-peer-urls
      - http://etcdnode1:2380
      - -listen-peer-urls
      - http://0.0.0.0:2380
      - -initial-cluster
      - etcdnode1=http://etcdnode1:2380

  dbnode1:
    image: seocahill/patroni:1.2.5
    secrets: 
      - patroni.yml
      - aws_access_key_id
      - aws_region
      - aws_secret_access_key
      - wale_s3_prefix
      - notification.py
      - notification.sh
    env_file:
      - db-1.env
    networks:
      - dbs
    entrypoint: /bin/bash entrypoint.sh
    command: patroni /run/secrets/patroni.yml

  dbnode2:
    image: seocahill/patroni:1.2.5
    secrets: 
      - patroni.yml
      - aws_access_key_id
      - aws_region
      - aws_secret_access_key
      - wale_s3_prefix
      - notification.py
      - notification.sh
    env_file:
      - db-2.env
    networks:
      - dbs
    entrypoint: /bin/bash entrypoint.sh
    command: patroni /run/secrets/patroni.yml
    
  dbnode3:
    image: seocahill/patroni:1.2.5
    secrets: 
      - patroni.yml
      - aws_access_key_id
      - aws_region
      - aws_secret_access_key
      - wale_s3_prefix
      - notification.py
      - notification.sh
    env_file:
      - db-3.env
    networks:
      - dbs
    entrypoint: /bin/bash entrypoint.sh
    command: patroni /run/secrets/patroni.yml
    
  cron:
    image: seocahill/patroni:latest
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /usr/bin/docker:/usr/bin/docker 
    networks:
      - dbs
    env_file:
      - cron.env
    deploy:
      mode: global
    secrets: 
      - crontab
      - aws_access_key_id
      - aws_region
      - aws_secret_access_key
      - wale_s3_prefix
      - aws_default_region
      - cron_archive
      - cron_restore_archive
      - cron_dump
      - cron_restore_dump
    entrypoint: bash
    command: /run/secrets/crontab

networks:
  dbs:
    external: true

secrets:
  haproxy_cfg:
    file: config/haproxy.cfg
  patroni.yml:
    file: patroni.yml
  aws_access_key_id:
    file: wal-e/AWS_ACCESS_KEY_ID
  aws_region:
    file: wal-e/AWS_REGION
  aws_default_region:
    file: wal-e/AWS_DEFAULT_REGION
  aws_secret_access_key:
    file: wal-e/AWS_SECRET_ACCESS_KEY
  wale_s3_prefix:
    file: wal-e/WALE_S3_PREFIX_S
  crontab:
    file: cron/crontab.sh
  cron_archive:
    file: cron/archive
  cron_restore_archive:
    file: cron/restore_archive
  cron_dump:
    file: cron/dump
  cron_restore_dump:
    file: cron/restore_dump
  notification.py:
    file: callbacks/test.py
  notification.sh:
    file: callbacks/test.sh